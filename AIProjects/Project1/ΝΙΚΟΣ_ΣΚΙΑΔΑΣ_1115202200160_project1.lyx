#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrartcl
\begin_preamble
%\usepackage{bm}
\usepackage{bbm}
\usepackage{xcolor}
\usepackage{cleveref}
%\usepackage{textcomp}
%\usepackage{textgreek}
%\usepackage{pdflscape}
%\renewcommand\[{\begin{equation}}
%\renewcommand\]{\end{equation}}
\addtokomafont{disposition}{\rmfamily}
\addtokomafont{descriptionlabel}{\rmfamily}
%\setlength{\columnseprule}{0.4pt}
\renewcommand{\arraystretch}{1.5}
\relpenalty=10000
\binoppenalty=10000
% Added by lyx2lyx
\setlength{\parskip}{\medskipamount}
\setlength{\parindent}{0pt}
\end_preamble
\use_default_options true
\begin_modules
theorems-bytype
\end_modules
\maintain_unincluded_children no
\language english
\language_package default
\inputencoding auto-legacy
\fontencoding auto
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command biber
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Online Costaware Teacher/Student Framework"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize letter
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine biblatex
\cite_engine_type authoryear
\biblio_style plain
\biblatex_bibstyle authortitle
\biblatex_citestyle authortitle
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\index Index
\shortcut idx
\color #006600
\end_index
\leftmargin 0.5in
\topmargin 1in
\rightmargin 0.5in
\bottommargin 1in
\headheight 0.5in
\headsep 0.5in
\footskip 0.5in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle headings
\tablestyle default
\bullet 1 0 9 -1
\bullet 3 0 7 -1
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Title
ΤΕΧΝΗΤΗ ΝΟΗΜΟΣΥΝΗ
\end_layout

\begin_layout Title
ΕΡΓΑΣΙΑ 1
\end_layout

\begin_layout Author
ΝΙΚΟΣ ΣΚΙΑΔΑΣ,
 SDI2200160
\end_layout

\begin_layout Problem
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Έχετε το εξής πρόβλημα αναζήτησης:
\end_layout

\begin_layout Itemize
Ο χώρος καταστάσεων αναπαρίσταται ως δένδρο.
\end_layout

\begin_layout Itemize
Ο κόμβος της ρίζας (αρχική κατάσταση) έχει τρεις κόμβους-παιδιά.
\end_layout

\begin_layout Itemize
Κάθε ένας από αυτούς τους κόμβους-παιδιά έχει επίσης τρεις κόμβους-παιδιά κ.ο.κ.
 Δηλαδή,
 το δένδρο έχει ομοιόμορφο παράγοντα διακλάδωσης ίσο με 
\begin_inset Formula $3$
\end_inset

.
\end_layout

\begin_layout Itemize
Ο στόχος βρίσκεται στο βάθος 
\begin_inset Formula $4$
\end_inset

.
\end_layout

\begin_layout Standard
Να υπολογίσετε θεωρητικά τον μικρότερο και το μεγαλύτερο αριθμό κόμβων που επεκτείνονται από κάθε έναν από τους παρακάτω αλγόριθμους αναζήτησης,
 υποθέτοντας ότι εκτελούν πλήρη αναζήτηση (δηλαδή,
 μέχρι να βρεθεί ο στόχος):
\end_layout

\begin_layout Itemize
Αναζήτηση πρώτα κατά πλάτος (BFS).
\end_layout

\begin_layout Itemize
Αναζήτηση πρώτα κατά βάθος (DFS).
 Υποθέστε ότι ο DFS εξετάζει πάντα πρώτα το αριστερότερο παιδί.
\end_layout

\begin_layout Itemize
Αναζήτηση με επαναληπτική εκβάθυνση (IDS).
\end_layout

\begin_layout Solution
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Solution
Ο χώρος καταστάσεων αναπαρίσταται ως δένδρο και είναι γνωστό οτι ο παράγοντας διακλάδωσεης,
 έστω b,
 ισούται με 3 δηλαδή,
 
\begin_inset Formula $b=3$
\end_inset

.
 Επίσης,
 το βάθος του δέντρου,
 έστω d,
 ισούται με 4,
 δηλαδή,
 
\begin_inset Formula $d=4$
\end_inset

.
\end_layout

\begin_layout Itemize
Επίπεδο 
\begin_inset Formula $0(d=0):$
\end_inset

 
\begin_inset Formula $3^{0}=1$
\end_inset

 κόμβος
\end_layout

\begin_layout Itemize
Επίπεδο 
\begin_inset Formula $1(d=1):$
\end_inset

 
\begin_inset Formula $3^{1}=3$
\end_inset

 κόμβοι
\end_layout

\begin_layout Itemize
Επίπεδο 
\begin_inset Formula $2(d=2):$
\end_inset

 
\begin_inset Formula $3^{2}=9$
\end_inset

 κόμβοι
\end_layout

\begin_layout Itemize
Επίπεδο 
\begin_inset Formula $3(d=3):$
\end_inset

 
\begin_inset Formula $3^{3}=27$
\end_inset

 κόμβοι
\end_layout

\begin_layout Itemize
Επίπεδο 
\begin_inset Formula $4(d=4):$
\end_inset

 
\begin_inset Formula $3^{4}=81$
\end_inset

 κόμβοι
\end_layout

\begin_layout Standard
Αρα ο συνολικός αριθμός κόμβων του δέντρου με βάθος 4 είναι:
\begin_inset Formula 
\[
1+3+9+27+81=121
\]

\end_inset


\end_layout

\begin_layout Paragraph*
1) ΑΝΑΖΗΤΗΣΗ ΠΡΩΤΑ ΚΑΤΑ ΠΛΑΤΟΣ (BFS):
\end_layout

\begin_layout Standard
Η αναζήτηση BFS εξετάζει τους κόμβους επίπεδο προς επίπεδο,
 από το μικρότερο στο μεγαλύτερο βάθος.
\end_layout

\begin_layout Standard

\emph on
ΜΕΓΙΣΤΟΣ ΑΡΙΘΜΟΣ ΚΟΜΒΩΝ;
\end_layout

\begin_layout Standard
Στη χειρότερη περίπτωση,
 ο στόχος είναι ο τελευταίος κόμβος του δεντρου σε βάθος 
\begin_inset Formula $4$
\end_inset

.
 Σε αυτή την περίπτωση,
 η BFS θα επεκτείνει όλους τους κόμβους του δέντρου,
 δηλαδή 121 κόμβους.
\end_layout

\begin_layout Standard

\emph on
ΕΛΑΧΙΣΤΟΣ ΑΡΙΘΜΟΣ ΚΟΜΒΩΝ;
\end_layout

\begin_layout Standard
Στην καλύτερη περίπτωση,
 ο στόχος είναι ο πρώτος κόμβος στο βάθος 
\begin_inset Formula $4$
\end_inset

.
 Σε αυτή την περίπτωση,
 η BFS θα επεκτείνει όλους τους κόμβους από τα επίπεδα 0 έως 3,
 και μόνο έναν κόμβο από το επίπεδο 4,
 δηλαδή:
\begin_inset Formula 
\[
1+3+9+27+1=41
\]

\end_inset


\end_layout

\begin_layout Standard
Αρα ο BFS θα διασχίσει 
\begin_inset Formula $41$
\end_inset

 κομβους για να βρει τον στόχο.
\end_layout

\begin_layout Paragraph
2) ΑΝΑΖΗΤΗΣΗ ΠΡΩΤΑ ΚΑΤΑ ΒΑΘΟΣ (DFS):
\end_layout

\begin_layout Standard
Η DFS προχωρά σε βάθος,
 εξετάζοντας τον πρώτο απόγονο κάθε κόμβου (το αριστερότερο παιδί),
 μέχρι να βρει τον στόχο ή να εξαντλήσει ένα μονοπάτι και να επιστρέψει πίσω για να εξετάσει τους επόμενους απογόνους.
\end_layout

\begin_layout Standard

\emph on
ΜΕΓΙΣΤΟΣ ΑΡΙΘΜΟΣ ΚΟΜΒΩΝ;
\end_layout

\begin_layout Standard
Στη χειρότερη περίπτωση,
 ο στόχος είναι ο τελευταίος κόμβος του δεντρου σε βάθος 
\begin_inset Formula $4$
\end_inset

.
 Σε αυτή την περίπτωση,
 ο DFS θα εξετάσει όλους τους κόμβους του δέντρου,
 διασχίζοντας και τους 121 κόμβους.
\end_layout

\begin_layout Standard

\emph on
ΕΛΑΧΙΣΤΟΣ ΑΡΙΘΜΟΣ ΚΟΜΒΩΝ;
\end_layout

\begin_layout Standard
Στην καλύτερη περίπτωση,
 ο DFS βρίσκει τον στόχο αμέσως,
 στο πρώτο φύλλο που επισκέπτεται,
 δηλαδή το αριστερότερο φύλλο σε βάθος 4.
 Σε αυτή την περίπτωση,
 ο DFS θα επεκτείνει έναν κόμβο σε κάθε επίπεδο του δέντρου:
\begin_inset Formula 
\[
1+1+1+1+1=5
\]

\end_inset


\end_layout

\begin_layout Standard
Αρα ο DFS θα διασχίσει 
\begin_inset Formula $5$
\end_inset

 κομβους για να βρει τον στόχο.
\end_layout

\begin_layout Paragraph
2) ΑΝΑΖΗΤΗΣΗ ΜΕ ΕΠΑΝΑΛΗΠΤΙΚΗ ΕΚΒΑΘΥΝΣΗ (IDS)
\end_layout

\begin_layout Standard
Η IDS είναι ένας συνδυασμός DFS και BFS,
 όπου εκτελεί διαδοχικές αναζητήσεις DFS,
 αυξάνοντας το μέγιστο επιτρεπόμενο βάθος κατά 1 σε κάθε επανάληψη.
\end_layout

\begin_layout Standard

\emph on
ΜΕΓΙΣΤΟΣ ΑΡΙΘΜΟΣ ΚΟΜΒΩΝ;
\end_layout

\begin_layout Standard
Στη χειρότερη περίπτωση,
 ο στόχος είναι ο τελευταίος κόμβος του δεντρου σε βάθος 
\begin_inset Formula $4$
\end_inset

.
 Ο IDS εκτελεί επαναληπτικά αναζητήσεις πρώτα κατά βάθος μέχρι το 
\begin_inset Formula $d=0$
\end_inset

,
 
\begin_inset Formula $d=1$
\end_inset

,
 
\begin_inset Formula $d=2$
\end_inset

,
 
\begin_inset Formula $d=3$
\end_inset

,
 
\begin_inset Formula $d=4$
\end_inset

.
 Επειδή η IDS επαναλαμβάνει την DFS για κάθε όριο βάθους,
 επεκτείνει όλους τους κόμβους του δέντρου όπως στη BFS και τη DFS στη χειρότερη περίπτωση,
 δηλαδή:
\begin_inset Formula 
\[
1+3+9+27+81=121
\]

\end_inset


\end_layout

\begin_layout Standard

\emph on
ΕΛΑΧΙΣΤΟΣ ΑΡΙΘΜΟΣ ΚΟΜΒΩΝ;
\end_layout

\begin_layout Standard
Στην καλύτερη περίπτωση,
 ο στόχος είναι ο πρώτος κόμβος σε βάθος 
\begin_inset Formula $4$
\end_inset

.
 Η IDS εκτελεί διαδοχικές DFS για τα όρια βάθους από 0 έως 4,
 αλλά σταματά νωρίτερα μόλις βρεθεί ο στόχος.
 Ο αριθμός των κόμβων που επεκτείνονται είναι:
\begin_inset Formula 
\[
(1+3)+(1+3+9)+(1+3+9+27)+1=59
\]

\end_inset


\end_layout

\begin_layout Standard
Αρα ο IDS θα διασχίσει 
\begin_inset Formula $59$
\end_inset

 κομβους για να βρει τον στόχο.
\end_layout

\end_body
\end_document
